<?php

module_load_include('inc', 'bxdev_vid', 'bxdev_vid.forms');

/**
 * HOOKS
 */

/**
 * Implements hook_menu().
 */
function bxdev_vid_menu() {
  $items['join-our-team'] = array(
    'title' => t('Videographer or Editor? Join Our Team!'),
    'page callback' => 'bxdev_vid_join_form',
    'access arguments' => array('access content'),
		'file path' => drupal_get_path('module', 'user'),
    'file' => 'user.pages.inc',
		'type' => MENU_NORMAL_ITEM,
  );

	$items['user/%user/info'] = array(
    'title' => t('Profile'),
    'page callback' => 'bxdev_vid_user_view_page',
		'page arguments' => array(1),
    'access arguments' => array(1),
		'access callback' => 'bxdev_vid_profile_access_callback',
		'type' => MENU_LOCAL_TASK,
	);
	
	$items['terms/get'] = array(
		'page callback' => 'bxdev_vid_terms_get_page',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
	);

  return $items;
}

/**
 * Implements hook_block_info().
 */
function bxdev_vid_block_info() {
  // This example comes from node.module.
  $blocks['vid_sort']['info'] = t('Videographer sort');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bxdev_vid_block_view($delta = '') {
  $block = array();
	$output = '';
	
  switch ($delta) {
    case 'vid_sort':
			// get the uri
			$query = $_SERVER['REQUEST_URI'];
			// determine if we need to prepend ? or &
			$symbol = (strpos($query, '?') > 0) ? '&' : '?';
			// search for the string: '&sort_by='
			if(($pos = strpos($query, '&sort_by=')) > 0){
				$query = substr($query, 0, $pos);
			}
			// build the markup
			$output .= 'Sort by: ';
			$output .= '<a href="' . $query . $symbol . 'sort_by=field_rating_value&sort_order=DESC">Rating</a> | ';
			$output .= '<a href="' . $query . $symbol . 'sort_by=created_1&sort_order=DESC">Recent</a> | ';
			$output .= '<a href="' . $query . $symbol . 'sort_by=field_name_value&sort_order=ASC">ABC</a>';
      break;
  }

	$block['content'] = $output;
  return $block;
}

/**
 * Implements hook_preprocess_page().
 */
function bxdev_vid_preprocess_page(&$variables) {
	
	// check if page is displaying videographer full node
	if(isset($variables['node'])){
		$variables['videographer'] = ($variables['node']->type == 'videographer') ? TRUE : FALSE;
	}else{
		$variables['videographer'] = FALSE;
	}
	
	// check if page is videographer directory
	if(arg(0) == 'videographers'){
		$_SESSION['vid_filters'] = $_SERVER['REQUEST_URI'];
	}
	
	/**
	 * START VIDEOGRAPHER CITY EXPORT
	 */
	
	// $results = db_select('field_data_field_region', 'r')
	// 	->distinct()
	// 	->fields('r', array('field_region_value'))
	// 	->orderBy('field_region_value', 'ASC')
	// 	->execute()
	// 	->fetchAll();
	// 	
	// $regions = array();
	// foreach($results as $result){
	// 	$regions[] = $result->field_region_value;
	// }
	// 
	// dpm(implode(",\r\n", $regions));		
	
	/**
	 * END VIDOEGRAPHER CITY EXPORT
	 */
	
	
	/**
	 * START VIDEOGRAPHER EMAIL BLAST TESTING
	 */
	
	// $results = db_select('users_roles', 'u')
	// 	->fields('u', array('uid'))
	// 	->range(0, 300)
	// 	->condition('rid', 5, '=')
	// 	->execute();
	// 	
	// foreach($results as $row){
	// 	$account = user_load($row->uid);
	// 	dpm($account->mail);
	// }
	
	// global $base_url;
	// 
	// $user = new User();
	// $user->load(3828);
	// $user->reset_password();
	// $account = $user->get_user();
	// 
	// $params = array(
	// 	'full_name' => $account->field_name['und'][0]['value'],
	// 	'login_link' => $base_url . '/user',
	// 	'username' => $account->mail,
	// 	'password' => $user->password,
	// );
	// 
	// drupal_mail('bxdev_project', 'videographer_existing', $account->mail, language_default(), $params);
	
	/**
	 * END VIDEOGRPAPHER EMAIL BLAST TESTING
	 */
	
	
}

/**
 * Implements hook_profile2_update().
 */
function bxdev_vid_profile2_update($profile){
	
	// if the profile is a videographer and a w9 file exists
	if($profile->type == 'videographer' && !empty($profile->field_videographer_w9['und'][0]['fid'])){
		
		$w9 = file_load($profile->field_videographer_w9['und'][0]['fid']);
				
		// check if videographer has any pending payments
		$results = db_select('users_w9_reminders', 'u')
			->fields('u')
			->condition('uid', $profile->uid)
			->execute()
			->fetchAll();
		
		if(!empty($results)){
			// cycle through each pending payment and execute payment
			foreach($results as $row){
				$project = new Project($row->nid);
				$project->process_videographer_payment($w9, $row->amount, $row->description);
			}
		}
		
		// remove all w9 reminders associated with videographer
		db_delete('users_w9_reminders')
			->condition('uid', $profile->uid)
			->execute();		
	}
}


/**
 * CUSTOM
 */

/**
 * Page builder: videographer view
 */
function bxdev_vid_user_view_page($account){
	global $user;
	$role = bxdev_user_get_role($user->uid);
	// load the profile
	$profile = profile2_load_by_user($account->uid, 'videographer');
	// get renderable array - profile
	$profile = field_attach_view('profile2', $profile, 'full');
	// get renderable array - user
	$account_render = field_attach_view('user', $account, 'full');
	// get the previous page
	$referer = (!empty($_SESSION['vid_filters'])) ? $_SESSION['vid_filters'] : '/videographers';
	
	// build page markup
	$output = '';
	$output .= ($role == 'pc') ? '<div class="videographer-back"><a href="' . $referer . '">&lt; Back to Videographer List</a></div>' : '';
	
	$output .= '<div class="left">';
		$output .= '<div class="left-top">';
		
			$output .= '<div class="section top">';
				$output .= '<h2>' . $account->field_name['und'][0]['value'] . '</h2>';
				if(isset($profile['field_region']))	$output .= '<div class="category">' . $profile['field_region'][0]['#markup'] . '</div>';
				if(isset($profile['field_rating']) && $role == 'pc') $output .= '<div class="symbols"><div class="videographer-rating videographer-rating-' . $profile['field_rating'][0]['#markup'] . '"></div></div>';
			$output .= '</div>';
			
			$output .= '<div class="section bottom">';
				if(isset($account_render['field_phone'])) $output .= '<div class="phone">' . $account_render['field_phone'][0]['#markup'] . '</div>';
				$output .= '<div class="email"><a href="mailto:' . $account->mail . '">' . $account->mail . '</a></div>';
				if(isset($profile['field_address'])) $output .= '<div class="address">' . nl2br($profile['field_address'][0]['#markup']) . '</div>';
				if(isset($profile['field_resume'])) $output .= '<div class="resume">' . render($profile['field_resume']) . '</div>';
			$output .= '</div>';
			
		$output .= '</div>';
		
		$output .= '<div class="left-mid">';
		$output .= render(drupal_get_form('bxdev_vid_w9_form'));
		$output .= '</div>';
		
		$output .= '<div class="left-bottom">';
		$output .= '<div class="controls"><div class="edit"><a href="/user/' . $account->uid . '/edit/videographer">EDIT</a></div>';
		$output .= ($role == 'pc') ? '<div class="delete"><a href="/user/' . $account->uid . '/cancel">DELETE</a></div>' : '';
		$output .= '</div>';		
		$output .= '</div>';
		
	$output .= '</div>'; // end .left
	
	$output .= '<div class="right">';
	
		$output .= (!empty($profile['field_notes'][0]['#markup']) && $role == 'pc') ? '<div class="videographer-item videographer-notes"><h3>NOTES:</h3>' . strip_tags(nl2br(render($profile['field_notes']))) . '</div>' : '';
		$output .= (!empty($profile['field_skills'][0]['#markup'])) ? '<div class="videographer-item"><h3>Skills:</h3>' . nl2br(render($profile['field_skills'])) . '</div>' : '';
		$output .= (!empty($profile['field_transportation'][0]['#markup'])) ? '<div class="videographer-item"><h3>Transportation:</h3>' . nl2br(render($profile['field_transportation'])) . '</div>' : ''; 
		$output .= (!empty($profile['field_camera_type'][0]['#markup'])) ? '<div class="videographer-item"><h3>Camera type:</h3>' . nl2br(render($profile['field_camera_type'])) . '</div>' : '';
		$output .= (!empty($profile['field_audio'][0]['#markup'])) ? '<div class="videographer-item"><h3>Audio:</h3>' . nl2br(render($profile['field_audio'])) . '</div>' : '';
		$output .= (!empty($profile['field_lighting'][0]['#markup'])) ? '<div class="videographer-item"><h3>Lighting:</h3>' . nl2br(render($profile['field_lighting'])) . '</div>' : '';
	  $output .= (!empty($profile['field_equipment'][0]['#markup'])) ? '<div class="videographer-item"><h3>Equipment:</h3>' . nl2br(render($profile['field_equipment'])) . '</div>' : '';
		$output .= (!empty($profile['field_links_work'][0]['#markup'])) ? '<div class="videographer-item"><h3>Links to Examples of Work:</h3>' . nl2br(render($profile['field_links_work'])) . '</div>' : '';
		$output .= (!empty($profile['field_availability'][0]['#markup'])) ? '<div class="videographer-item"><h3>Availability:</h3>' . nl2br(render($profile['field_availability'])) . '</div>' : '';	
	
	$output .= '</div>'; // end .right
	
	return $output;
}

/**
 * Page callback: get terms
 */
function bxdev_vid_terms_get_page(){
	// load the terms page node
	// $node = node_load(1031);
	$node = node_load(1005);
	print $node->body['und'][0]['value'];
}

/**
 * Access callback: videographer profile
 */
function bxdev_vid_profile_access_callback($account){
	global $user;
	$account_role = bxdev_user_get_role($account->uid);
	if($account_role == 'videographer'){
		// if logged in user is videographer
		if(bxdev_user_get_role($user->uid) == 'videographer'){
			// if videographer is viewing own profile
			if($user->uid == $account->uid){
				return TRUE;
			}
		// if logged in user is pc
		}else if(bxdev_user_get_role($user->uid) == 'pc'){
			return TRUE;
		}
	}
	return FALSE;
}








